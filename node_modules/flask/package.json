{
  "_from": "flask",
  "_id": "flask@0.2.10",
  "_inBundle": false,
  "_integrity": "sha1-9fWkLP1YownjfGfAo5YXqBnl4bc=",
  "_location": "/flask",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "flask",
    "fetchSpec": "latest",
    "name": "flask",
    "raw": "flask",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/flask/-/flask-0.2.10.tgz",
  "_shasum": "f5f5a42cfd58a309e37c67c0a39617a819e5e1b7",
  "_spec": "flask",
  "_where": "C:\\Users\\jpnts\\development\\soupsong\\auth",
  "author": {
    "name": "Jarad Light",
    "url": "https://github.com/jaradlight"
  },
  "bugs": {
    "url": "https://github.com/jaradlight/flask/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Chris Eastwood",
      "url": "https://github.com/drclaw"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Helper files for Sass projects.",
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-mocha": "^2.1.3",
    "gulp-shell": "^0.5.1",
    "path": "^0.12.7",
    "sass-true": "^2.0.2",
    "sassdoc": "^2.1.15"
  },
  "homepage": "https://github.com/jaradlight/flask",
  "keywords": [
    "css",
    "sass",
    "utility"
  ],
  "license": "MIT",
  "main": "sass/_flask.scss",
  "name": "flask",
  "optionalDependencies": {},
  "readme": "# Flask\n\n[![Build Status](https://api.travis-ci.org/jaradlight/flask.png?branch=master)](https://travis-ci.org/jaradlight/flask)\n\nHelper files for fonts and colours in Sass projects.\n\n## Installation\n\nInstall from your preferred package manager:\n\n- **NPM**: `npm install flask`\n- **Bower**: `bower install flask`\n\nImport to your stylesheets:\n\n``` scss\n// Installed with NPM\n@import '../node_modules/flask/sass/flask';\n\n// Installed with Bower\n@import '../bower_components/flask/sass/flask';\n```\n\n### Importing specific features\n\nIf you would like to use one or more features without importing everything, simply import the Flask core followed by the features you need.\n\n``` scss\n// Import Flask Core.\n@import '../node_modules/flask/sass/flask/core/core';\n\n// Import Flask Palette feature.\n@import '../node_modules/flask/sass/flask/palette/palette';\n```\n\n## Palette\n\n### Usage\n\n``` scss\n.teal-base  {\n  color: palette(teal);\n  // color: #2ed399;\n}\n\n.teal-light {\n  color: palette(teal, light);\n  // color: #43d7a3;\n}\n\n.teal-alias {\n  color: palette(brand-primary);\n  // color: #2ed399;\n}\n\n.teal-alias-with-variant {\n  color: palette(brand-primary, light);\n  // color: #43d7a3;\n}\n\n.teal-aliased-variant {\n  color: palette(highlight);\n  // color: #43d7a3;\n}\n```\n\n### Setup\n\n[Example](https://github.com/jaradlight/flask/blob/master/test/setup/_palette.scss)\n\nBegin by defining base colours. You can simply define these inside the palette map instead, but separate base variables make it easier to programmatically define variants.\n\n``` scss\n$flask-color-teal-base: #2ed399;\n```\n\n#### $palettes\n\nNext create the palette map. This variable will contain all colours and their variants. A colour group is defined by a nested map within the main palette map. The colour group key and any variant keys can be anything you like. However, every colour group needs one colour with the `base` key. Variants are optional.\n\n``` scss\n$palettes: (\n  teal: (                                      // Colour group key\n    base: $flask-color-teal-base,              // Base colour\n    dark: darken($flask-color-teal-base, 10),  // Dark Variant\n    light: lighten($flask-color-teal-base, 10) // Light Variant\n  )\n);\n```\n\n#### $palette-aliases\n\nOptionally, a `$palette-aliases` map can assign aliases to colour groups. Aliases can be used in place of colour group keys as the first argument to `palette()`. Additionally, aliases for specific colours may be defined by assigning a map of palette function arguments to the alias key.\n\n``` scss\n$palette-aliases: (\n  brand-primary: teal,\n  highlight: (teal, light)\n);\n```\n\n\n## Fonts\n\n### Usage\n\n``` scss\n.font-family-function {\n  font-family: font-family(open-sans);\n  // font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.font-family-mixin {\n  @include font-family(open-sans);\n  // font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.font-name {\n  font-family: font-name(open-sans);\n  // font-family: \"Open Sans\";\n}\n\n.font-name-aliased {\n  font-family: font-name(primary-sans-serif);\n  // font-family: \"Open Sans\";\n}\n\n.font-name-aliased-with-variant {\n  font-family: font-name(primary-sans-serif, special);\n  // font-family: \"Open Sans Special\";\n}\n\n.font-name-aliased-variant {\n  content: font-name(heading);\n  // content: \"Open Sans Special\";\n}\n\n.font-type {\n  content: font-type(open-sans);\n  // content: sans-serif\n}\n\n.font-fallback {\n  content: font-fallback(open-sans);\n  // content: \"Helvetica Neue\", Helvetica, Arial, sans-serif\n}\n```\n\n### Setup\n\n[Example](https://github.com/jaradlight/flask/blob/master/test/setup/_font.scss)\n\n#### $fonts\n\nThe fonts map contains all font names, variants, and fallbacks (if applicable).\nEach font should have its own group. For example, if you are using 'Merriweather', you may define a font group under the key `merriweather`.\n\nFor each font group, required keys are:\n\n* `font-type` The font family's type. ie: serif, sans-serif, glyph, etc\n* `regular` The name of the basic version of the font.\n\nOptional keys:\n* `fallback` A map of fallback fonts for this font family. If set, will override the fallback used from `$font-fallbacks` which is based on `font-type`.\n\n\n``` scss\n$fonts: (\n  merriweather: (\n    font-type:    serif,\n    regular:      'Merriweather',\n    fallback: (\n      'Georgia',\n      serif\n    )\n  )\n);\n```\n\n#### $font-fallbacks\n\n`$font-fallbacks` map variable:\n\n``` scss\n$font-fallbacks: (\n  serif: (\n    'Georgia',\n    serif\n  ),\n  sans-serif: (\n    'Helvetica Neue',\n    Helvetica,\n    Arial,\n    sans-serif\n  )\n);\n```\n\n#### $font-aliases\n\nOptionally, a `$font-aliases` map can assign aliases to fonts. Aliases can be used in place of font group keys in `font` functions. Additionally, aliases for specific font variants may be defined by assigning a map of font-name function arguments to the alias key.\n\n``` scss\n$font-aliases: (\n  primary-serif: merriweather,\n  primary-sans-serif: open-sans,\n  heading: (open-sans, special)\n);\n```\n\n#### Additional Functions\n\n``` scss\n.font-name {\n  content: font-name(open-sans);\n  // content: \"Open Sans\"\n}\n\n.font-type {\n  content: font-type(merriweather);\n  // content: serif\n}\n\n.font-fallback {\n  content: font-fallback(merriweather);\n  // content: \"Georgia\", serif\n}\n```\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jaradlight/flask.git"
  },
  "scripts": {
    "test": "gulp test"
  },
  "version": "0.2.10"
}
